server:
  port: 8080

spring:
  thymeleaf:
    prefix: classpath:/templates/   # ✅ Thymeleaf 템플릿 위치 지정
    suffix: .html
    check-template-location: true

  profiles:
    active: prod  # 운영 환경에서는 prod 설정 사용

  data:
    mongodb:
      auto-index-creation: true
      uri: mongodb://host.docker.internal:27017/chatDB

  elasticsearch:
    uris: http://elasticsearch:9200

  kafka:
    bootstrap-servers: kafka:9092  # Kafka 서버 주소
    consumer:
      group-id: "#{T(java.util.UUID).randomUUID().toString()}"
      auto-offset-reset: earliest  # 가장 오래된 메시지부터 읽기
      properties:
        spring.json.trusted.packages: "*"
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all  # 메시지가 정상적으로 수신되었을 때만 확인

  datasource:
    url: jdbc:mysql://host.docker.internal:3306/sys
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 1234
  jpa:
    hibernate:
      ddl-auto: update  # 테이블 자동 생성
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

logging:
  level:
    root: info
    org.springframework.kafka: info  # Kafka 디버깅 로그 활성화(info단계 출력)