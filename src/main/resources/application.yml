spring:
  datasource:
    url: jdbc:mysql://database-1.c7y4ck8o2zog.ap-northeast-2.rds.amazonaws.com:3306/chatdb?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

  data:
    mongodb:
      uri: mongodb+srv://${MONGO_USERNAME}:${MONGO_PASSWORD}@cluster0.dv9nyti.mongodb.net/chatdb?retryWrites=true&w=majority&appName=Cluster0

  kafka:
    bootstrap-servers: ${KAFKA_HOST}:9092
    consumer:
      group-id: "#{T(java.util.UUID).randomUUID().toString()}"
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: "*"
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all

server:
  port: 8080

logging:
  level:
    root: info
    org.springframework.kafka: info